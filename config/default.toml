[general]
# error   40
# warning 30
# info    20
# debug   10
logging = 20
debug = false
overwrite = false

[data]
train_data = '/home/maisl/data/flylight/flylight_v2/flylight_v2_0_train.hdf'
val_data = '/home/maisl/data/flylight/flylight_v2/flylight_v2_0_val.hdf'
test_data = '/home/maisl/data/flylight/flylight_v2/flylight_v2_0_test.hdf'
voxel_size = [1, 1, 1]
input_format = 'hdf'
gt_key = 'gt'
num_channels = 3

[model]
train_net_name = 'train_net'
test_net_name = 'test_net'
train_input_shape = [140, 140, 140]
test_input_shape = [180, 180, 180]
patchshape = [7, 7, 7]
patchstride = [1, 1, 1]
num_fmaps = 12
num_output_fmaps = 343
max_num_inst = 2
fmap_inc_factors = [3, 3, 3]
fmap_dec_factors = [0.8, 1.0, 2.0]
downsample_factors = [[2, 2, 2], [2, 2, 2], [2, 2, 2]]
activation = 'relu'
padding = 'valid'
kernel_size = 3
num_repetitions = 2
# upsampling = 'trans_conv' or 'resize_conv', prefer resize_conv?
upsampling = 'resize_conv'
mean_after_loss = true
overlapping_inst = true
regress_num_inst = false

[optimizer]
optimizer = 'Adam'
lr = 0.0001

[preprocessing]
clipmax = 1500

[training]
batch_size = 1
num_gpus = 1
num_workers = 5
cache_size = 40
max_iterations = 400
checkpoints = 20
snapshots = 20
profiling = 50

[training.augmentation.elastic]
control_point_spacing = [10, 10, 10]
jitter_sigma = [1, 1, 1]
rotation_min = -45
rotation_max = 45

[training.augmentation.intensity]
scale = [0.9, 1.1]
shift = [-0.1, 0.1]

[training.augmentation.simple]
# mirror = [0, 1, 2]
# transpose = [0, 1, 2]

[prediction]
output_format = 'zarr'

[validation]
params = ['patch_threshold', 'skipThinCover']
# params need to be listed here, if value from [vote_instances] should be taken, use <param> = []
patch_threshold = [0.8, 0.9]
skipThinCover = []

[testing]
num_workers = 5

[vote_instances]
patch_threshold = 0.9
fc_threshold = 0.5
cuda = false
blockwise = true
num_workers = 8
chunksize = [92, 92, 92]
debug = false
select_patches_for_sparse_data = true
save_no_intermediates = true
output_format = 'hdf'
parallel = false
includeSinglePatchCCS = true
sample = 1.0
removeIntersection = true
mws = false
isbiHack = false
mask_fg_border = false
graphToInst = false
skipLookup = false
skipConsensus = false
skipRanking = false
skipThinCover = false
thin_cover_use_kd = true
affinity_graph_voting = false
affinity_graph_voting_selected = false
termAfterThinCover = false
add_suffix = false
consensus_without_overlap = false   # optional
one_instance_per_channel = false    # optional
# aff_graph = "/path/to/file"
# selected_patch_pairs = "/path/to/file"
# crop_z_s = 100
# crop_y_s = 100
# crop_x_s = 100
# crop_z_e = 150
# crop_y_e = 150
# crop_x_e = 150


[evaluation]
num_workers = 1
res_key = 'vote_instances'
metric = 'confusion_matrix.th_0_5.AP'
foreground_only = false
summary = ["confusion_matrix.th_0_5.AP",
	"confusion_matrix.th_0_5.precision",
	"confusion_matrix.th_0_5.recall",
	"confusion_matrix.th_0_6.AP",
	"confusion_matrix.th_0_6.precision",
	"confusion_matrix.th_0_6.recall",
	"confusion_matrix.th_0_7.AP",
	"confusion_matrix.th_0_7.precision",
	"confusion_matrix.th_0_7.recall",
	"confusion_matrix.th_0_8.AP",
	"confusion_matrix.th_0_8.precision",
	"confusion_matrix.th_0_8.recall",
]

[postprocessing]
remove_small_comps = 600

[postprocessing.watershed]
output_format = 'hdf'

[visualize]
save_mip = false
